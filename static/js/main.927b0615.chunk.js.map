{"version":3,"sources":["stopwatch.jsx","App.js","index.js"],"names":["stopwatch","couterFunction","increment","state","microSec","secInc","sec","minInc","min","isStartButtonDisabled","setState","startTimer","storeInterval","setInterval","interval","clearTimer","clone","clear","clearInterval","resetTimer","lapeseInterval","lapse","className","id","this","disabled","onClick","map","value","index","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"gRAiIeA,E,kDA7HX,aAAc,IAAD,8BACT,gBAWJC,eAAiB,WACb,IAAIC,EAAY,EAAKC,MAAMC,SACvBC,EAAS,EAAKF,MAAMG,IACpBC,EAAS,EAAKJ,MAAMK,IACP,EAAKL,MAAMM,sBAGX,KAAdP,MACGG,EACFH,EAAY,KAEF,KAAXG,MACGE,EACFF,EAAS,KAEb,EAAKK,SAAS,CACVN,WAAYF,EACZI,IAAKD,EACLG,IAAID,EACJE,sBAdS,QAjBJ,EAmCbE,WAAY,WACb,IAAKC,EAAiBC,YAAY,EAAKZ,eAAgB,KACtD,EAAKS,SAAS,CACVI,SAASF,KAtCA,EA0CbG,WAAa,WAET,IAAIC,EAAQ,EAAKb,MAAMW,SACnBG,EAAQC,cAAcF,GACT,EAAKb,MAAMM,sBAE5B,EAAKC,SAAS,CACVI,SAASG,EACTR,sBAHS,SA/CJ,EAqDbU,WAAa,WACQ,EAAKhB,MAAMM,sBAEb,EAAKN,MAAMC,SAEhB,EAAKD,MAAMG,IAEX,EAAKH,MAAMK,IAGrB,IAAIQ,EAAQ,EAAKb,MAAMW,SACnBG,EAAQC,cAAcF,GAC1B,EAAKN,SAAS,CACVN,SATO,IAUPE,IARE,IASFE,IAPE,IAQFM,SAASG,EACTR,sBAfS,SAvDJ,EA4EbW,eAAiB,WACd,EAAKV,SAAS,CACVW,MAAM,GAAD,mBAAK,EAAKlB,MAAMkB,OAAhB,CAAuB,EAAKlB,MAAMW,cA5E1C,EAAKX,MAAQ,CACTC,SAAW,IACXE,IAAI,IACJE,IAAI,IACJM,SAAS,GACTL,uBAAsB,EACtBY,MAAM,IARD,E,qDAsFT,OAAO,gCACC,qBAAKC,UAAU,MAAf,SACI,sBAAKA,UAAU,uBAAf,UACA,sBAAKC,GAAG,QAAQD,UAAU,cAA1B,UACI,+BAAQE,KAAKrB,MAAMK,IAAM,GAAK,IAAIgB,KAAKrB,MAAMK,IAAMgB,KAAKrB,MAAMK,MAC9D,uCAAUgB,KAAKrB,MAAMG,IAAK,GAAK,IAAIkB,KAAKrB,MAAMG,IAAMkB,KAAKrB,MAAMG,OAC/D,uCAAUkB,KAAKrB,MAAMC,SAAW,GAAK,IAAMoB,KAAKrB,MAAMC,SAAWoB,KAAKrB,MAAMC,eAEhF,qBAAKkB,UAAU,cAAcC,GAAG,UAAhC,SACI,sBAAKD,UAAU,6BAAf,UACI,qBAAKA,UAAU,WAAf,SACI,2CAEJ,qBAAKA,UAAU,WAAf,SACI,6CAEJ,qBAAKA,UAAU,YAAf,SACI,kDAKZ,sBAAKA,UAAU,mBAAf,UACI,wBAAQA,UAAU,8BAA8BG,SAAUD,KAAKrB,MAAMM,sBAAuBiB,QAASF,KAAKb,WAA1G,mBACA,wBAAQW,UAAU,6BAA6BI,QAASF,KAAKT,WAA7D,kBACA,wBAAQO,UAAU,sBAAsBI,QAASF,KAAKL,WAAtD,2BAMHK,KAAKrB,MAAMkB,MAAMM,KAAI,SAACC,EAAOC,GAAR,OAClB,6BAAKD,c,GAvHLE,IAAMC,WCUfC,E,uKANX,OAAO,8BACL,cAAC,EAAD,U,GAHYF,IAAMC,WCExBE,IAASC,OAAQ,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.927b0615.chunk.js","sourcesContent":["import React from 'react';\r\n// import Button from 'react-bootstrap/Button'\r\n\r\nclass stopwatch extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            microSec : '0',\r\n            sec:'0',\r\n            min:'0',\r\n            interval:'',\r\n            isStartButtonDisabled:false,\r\n            lapse:[]\r\n        }\r\n    }\r\n\r\n    couterFunction = ()=>{\r\n        let increment = this.state.microSec\r\n        let secInc = this.state.sec;\r\n        let minInc = this.state.min;\r\n        let isdisabled = this.state.isStartButtonDisabled;\r\n        isdisabled = true\r\n\r\n        if(increment === 60){\r\n            ++secInc\r\n            increment = '0'\r\n        } \r\n        if(secInc === 60){\r\n            ++minInc\r\n            secInc = '0'\r\n        }\r\n        this.setState({\r\n            microSec: ++increment,\r\n            sec: secInc,\r\n            min:minInc,\r\n            isStartButtonDisabled: isdisabled \r\n        })\r\n        \r\n    }\r\n    startTimer= ()=>{\r\n   let  storeInterval =  setInterval(this.couterFunction, 1000)\r\n    this.setState({\r\n        interval:storeInterval\r\n    })    \r\n    }\r\n\r\n    clearTimer = () => {\r\n        \r\n        let clone = this.state.interval\r\n        let clear = clearInterval(clone)\r\n        let isdisabled = this.state.isStartButtonDisabled;\r\n        isdisabled = false\r\n        this.setState({\r\n            interval:clear,\r\n            isStartButtonDisabled:isdisabled\r\n        })\r\n    }\r\n    resetTimer = () => {\r\n        let isdisabled = this.state.isStartButtonDisabled;\r\n        isdisabled = false\r\n        let microsec = this.state.microSec\r\n        microsec = '0'\r\n        let sec = this.state.sec\r\n        sec = '0'\r\n        let min = this.state.min\r\n        min = '0'\r\n\r\n        let clone = this.state.interval\r\n        let clear = clearInterval(clone)\r\n        this.setState({\r\n            microSec:microsec,\r\n            sec:sec,\r\n            min:min,\r\n            interval:clear,\r\n            isStartButtonDisabled:isdisabled\r\n\r\n\r\n        })\r\n    }\r\n\r\n    lapeseInterval = () =>{ \r\n       this.setState({\r\n           lapse:[...this.state.lapse, this.state.interval]\r\n       })\r\n    }\r\n    \r\n\r\n    render(){\r\n        // let hello ='hee'\r\n        // console.log('hello')\r\n        return <div>\r\n                <div className='row'>\r\n                    <div className='col-md-8 offset-md-2'>\r\n                    <div id=\"timer\" className='text-center'>\r\n                        <span >{this.state.min < 10 ? '0'+this.state.min : this.state.min}</span>\r\n                        <span> : {this.state.sec <10 ? '0'+this.state.sec : this.state.sec}</span>\r\n                        <span> : {this.state.microSec < 10 ? '0' + this.state.microSec : this.state.microSec }</span>\r\n                    </div> \r\n                    <div className='text-center' id=\"content\">\r\n                        <div className=\"row justify-content-center\" >\r\n                            <div className=\"col-md-3\">\r\n                                <span>Hours</span>\r\n                            </div>\r\n                            <div className=\"col-md-3\"> \r\n                                <span>Minutes</span>\r\n                            </div>\r\n                            <div className=\"col-md-3 \">\r\n                                <span>Seconds</span>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className='text-center mt-5'>\r\n                        <button className=\"btn btn-success btn-lg mr-3\" disabled={this.state.isStartButtonDisabled} onClick={this.startTimer}>Start</button>\r\n                        <button className=\"btn btn-danger btn-lg mr-3\" onClick={this.clearTimer}>Stop</button>\r\n                        <button className=\"btn btn-info btn-lg\" onClick={this.resetTimer}>Reset</button>\r\n                        {/* <button className=\"btn btn-primary\" onClick={this.lapeseInterval}>Lapse</button> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                    {this.state.lapse.map((value, index )=>\r\n                        <li>{value}</li>                \r\n                    )}\r\n\r\n            </div>\r\n    }\r\n}\r\n\r\nexport default stopwatch; ","import './App.css';\nimport React from 'react'\nimport Stopwatch from './stopwatch.jsx';\n// import stopwatch from './stopwatch.jsx'\n\nclass App extends React.Component{\n  render(){\n    return <div>\n      <Stopwatch />\n      </div>\n  }\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render( <App />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}